/*
 Authors : Umberto Griffo <umberto.griffo@gmail.com>
 Linkedin : it.linkedin.com/pub/umberto-griffo/31/768/99
 Twitter : @UmbertoGriffo
 
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

 The contents of this file are subject to the terms of either the GNU
 General Public License Version 3 only ("GPL") or the Common
 Development and Distribution License("CDDL") (collectively, the
 "License"). You may not use this file except in compliance with the
 License. 
 You can obtain a copy of the License at http://www.gnu.org/licenses/gpl-3.0.txt.

 */
package umberto.G_RandomWaypointMobilityModel;

import org.gephi.lib.validation.PositiveNumberValidator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;

/**
 *
 *
 * @author Umberto Griffo
 */
public class RWMobilityModelPanel extends javax.swing.JPanel {

    /**
     * Creates new form RWMobilityModelPanel
     */
    public RWMobilityModelPanel() {
        initComponents();
    }

    public static ValidationPanel createValidationPanel(RWMobilityModelPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new RWMobilityModelPanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        //Node field
        group.add(innerPanel.nodeField, Validators.REQUIRE_VALID_NUMBER, new PositiveNumberValidator());
        //MaxX field
        group.add(innerPanel.maxXField, Validators.REQUIRE_VALID_NUMBER);
        //MaxY field
        group.add(innerPanel.maxYField, Validators.REQUIRE_VALID_NUMBER);
        //MaxV field
        group.add(innerPanel.maxVField, Validators.REQUIRE_VALID_NUMBER);
        //MinV field
        group.add(innerPanel.minVField, Validators.REQUIRE_VALID_NUMBER);
        //MaxWT field
        group.add(innerPanel.maxWTField, Validators.REQUIRE_VALID_NUMBER);
        //iteration field
        group.add(innerPanel.iterationField, Validators.REQUIRE_VALID_NUMBER, new PositiveNumberValidator());

        return validationPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        nodeLabel = new javax.swing.JLabel();
        edgeLabel = new javax.swing.JLabel();
        nodeField = new javax.swing.JTextField();
        maxXField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maxYField = new javax.swing.JTextField();
        maxVField = new javax.swing.JTextField();
        minVField = new javax.swing.JTextField();
        maxWTField = new javax.swing.JTextField();
        iterationField = new javax.swing.JTextField();

        nodeLabel.setText("# of nodes"); // NOI18N

        edgeLabel.setText("Max X"); // NOI18N

        nodeField.setText(""); // NOI18N
        nodeField.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeFieldActionPerformed(evt);
            }
        });

        maxXField.setText(""); // NOI18N

        jLabel1.setText("Max Y"); // NOI18N

        jLabel2.setText("Max Velocity"); // NOI18N

        jLabel3.setText("Min Velocity"); // NOI18N

        jLabel4.setText("Max Wait Time"); // NOI18N

        jLabel5.setText("# of iteration"); // NOI18N

        maxYField.setText(""); // NOI18N

        maxVField.setText(""); // NOI18N

        minVField.setText(""); // NOI18N
        minVField.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minVFieldActionPerformed(evt);
            }
        });

        maxWTField.setText(""); // NOI18N

        iterationField.setText(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel5).addComponent(jLabel4).addComponent(jLabel3).addComponent(jLabel2).addComponent(nodeLabel).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(edgeLabel))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(maxYField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE).addComponent(maxVField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE).addComponent(iterationField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE).addComponent(minVField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE).addComponent(maxWTField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE).addComponent(nodeField).addComponent(maxXField)).addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(20, 20, 20).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(nodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(nodeLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(maxXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(edgeLabel)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(maxYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2).addComponent(maxVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(minVField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel4).addComponent(maxWTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel5).addGroup(layout.createSequentialGroup().addComponent(iterationField, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE).addGap(3, 3, 3))).addContainerGap(16, javax.swing.GroupLayout.PREFERRED_SIZE)));
    }// </editor-fold>

    private void nodeFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void minVFieldActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel edgeLabel;
    protected javax.swing.JTextField iterationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    protected javax.swing.JTextField maxVField;
    protected javax.swing.JTextField maxWTField;
    protected javax.swing.JTextField maxXField;
    protected javax.swing.JTextField maxYField;
    protected javax.swing.JTextField minVField;
    protected javax.swing.JTextField nodeField;
    private javax.swing.JLabel nodeLabel;
    // End of variables declaration
}
