/*
 Authors : Umberto Griffo <umberto.griffo@gmail.com>
 Linkedin : it.linkedin.com/pub/umberto-griffo/31/768/99
 Twitter : @UmbertoGriffo
 
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

 The contents of this file are subject to the terms of either the GNU
 General Public License Version 3 only ("GPL") or the Common
 Development and Distribution License("CDDL") (collectively, the
 "License"). You may not use this file except in compliance with the
 License. 
 You can obtain a copy of the License at http://www.gnu.org/licenses/gpl-3.0.txt.

 */
package umberto.G_RandomWaypointMobilityModel;

import org.gephi.lib.validation.BetweenZeroAndOneValidator;
import org.gephi.lib.validation.PositiveNumberValidator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;
import org.openide.util.NbBundle;

/**
 *
 *
 * @author Umberto Griffo
 */
public class Panel extends javax.swing.JPanel {

    /**
     * Creates new form RWMobilityModelPanel
     */
    public Panel() {
        initComponents();
    }

    public static ValidationPanel createValidationPanel(RWMobilityModelPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new RWMobilityModelPanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        //Node field
        group.add(innerPanel.nodeField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());

        //MaxX field
        group.add(innerPanel.maxXField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());
        //MaxY field
        group.add(innerPanel.maxYField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());
        //MaxV field
        group.add(innerPanel.maxVField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());
        //MinV field
        group.add(innerPanel.minVField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());
        //MaxWT field
        group.add(innerPanel.maxWTField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());
        //iteration field
        group.add(innerPanel.iterationField, Validators.REQUIRE_NON_EMPTY_STRING,
                new PositiveNumberValidator());

        return validationPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nodeLabel = new javax.swing.JLabel();
        edgeLabel = new javax.swing.JLabel();
        nodeField = new javax.swing.JTextField();
        maxXField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maxYField = new javax.swing.JTextField();
        maxVField = new javax.swing.JTextField();
        minVField = new javax.swing.JTextField();
        maxWTField = new javax.swing.JTextField();
        iterationField = new javax.swing.JTextField();

        nodeLabel.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.nodeLabel.text")); // NOI18N

        edgeLabel.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.edgeLabel.text")); // NOI18N

        nodeField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.nodeField.text")); // NOI18N
        nodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nodeFieldActionPerformed(evt);
            }
        });

        maxXField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.maxXField.text")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.jLabel3.text")); // NOI18N

        jLabel4.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.jLabel4.text")); // NOI18N

        jLabel5.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.jLabel5.text")); // NOI18N

        maxYField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.maxYField.text")); // NOI18N

        maxVField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.maxVField.text")); // NOI18N

        minVField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.minVField.text")); // NOI18N
        minVField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minVFieldActionPerformed(evt);
            }
        });

        maxWTField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.maxWTField.text")); // NOI18N

        iterationField.setText(org.openide.util.NbBundle.getMessage(Panel.class, "RWMobilityModelPanel.iterationField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(nodeLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(edgeLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxYField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(maxVField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(iterationField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(minVField, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(maxWTField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(nodeField)
                    .addComponent(maxXField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edgeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(maxYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(maxVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(minVField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(maxWTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(iterationField, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addContainerGap(16, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeFieldActionPerformed

    private void minVFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minVFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minVFieldActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel edgeLabel;
    protected javax.swing.JTextField iterationField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    protected javax.swing.JTextField maxVField;
    protected javax.swing.JTextField maxWTField;
    protected javax.swing.JTextField maxXField;
    protected javax.swing.JTextField maxYField;
    protected javax.swing.JTextField minVField;
    protected javax.swing.JTextField nodeField;
    private javax.swing.JLabel nodeLabel;
    // End of variables declaration//GEN-END:variables
}
